var o=Object.defineProperty;var c=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var i=(e,r,t)=>(c(e,typeof r!="symbol"?r+"":r,t),t);import{S as s}from"./UserRepository-f7559e71.js";import{x as n}from"./index-0979e10b.js";class y{constructor(){i(this,"axios",n("axios"))}async retrieveMyGroup(){try{const r=await this.axios.get(`${s}/api/myGroups`);if(r.status===200)return r.data}catch(r){throw r}}async create(r){try{if((await this.axios.post(`${s}/api/groups/create`,r)).status===201)return"Le groupe a bien été créé"}catch{return"Le nom du groupe est déjà utilisé"}}async retrieveAll(){try{const r=await this.axios.get(`${s}/api/groups`);if(r.status===200)return r.data}catch(r){throw r}}async retrieveAllAsAdmin(){try{const r=await this.axios.get(`${s}/api/admin/groups`);if(r.status===200)return r.data}catch(r){throw r}}async retrieveOne(r){try{const t=await this.axios.get(r);if(t.status===200)return t.data}catch(t){throw t}}async retrieveMembers(r){try{const t=await this.axios.get(r);if(t.status===200)return t.data}catch(t){throw t}}async checkCreator(r){try{const t=await this.axios.get(`${s}/api/groups/${r}/isCreator`);if(t.status===200)return t.data}catch(t){throw t}}async joinGroup(r,t){try{const a=await this.axios.post(`${s}/api/groups/join`,{groupName:r,password:t});if(a.status===200)return a.data}catch(a){throw a}}async leftGroup(r){try{const t=await this.axios.delete(`${s}/api/groups/${r}`);if(t.status===202)return t}catch(t){throw t}}async deleteMembers(r,t){try{const a=await this.axios.delete(`${s}/api/groups/${r}/${t}`);if(a.status==202)return a}catch(a){throw a}}async deleteGroup(r){try{const t=await this.axios.delete(`${s}/api/groups/${r}/delete`);if(t.status==202)return t}catch(t){throw t}}async deleteGroupAsAdmin(r){try{const t=await this.axios.delete(`${s}/api/admin/groups/${r}/delete`);if(t.status==202)return t}catch(t){throw t}}}export{y as G};
